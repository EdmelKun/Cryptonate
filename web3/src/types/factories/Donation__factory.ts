/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Donation, DonationInterface } from "../Donation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collectedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createCampaign",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "donateToCampaign",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaigns",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectedAmount",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "donators",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "donations",
            type: "uint256[]",
          },
        ],
        internalType: "struct Donation.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
    ],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfCampaigns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50610f65806100256000396000f3fe6080604052600436106100555760003560e01c806307ca140d1461005a5780630fa91fa914610083578063141961bc146100b157806342a4fda8146100e45780635a8a637d146100f9578063a6b0363314610119575b600080fd5b34801561006657600080fd5b5061007060015481565b6040519081526020015b60405180910390f35b34801561008f57600080fd5b506100a361009e366004610950565b61013b565b60405161007a929190610969565b3480156100bd57600080fd5b506100d16100cc366004610950565b61020a565b60405161007a9796959493929190610a33565b6100f76100f2366004610950565b6103e7565b005b34801561010557600080fd5b50610070610114366004610b40565b6104a9565b34801561012557600080fd5b5061012e6105a3565b60405161007a9190610c6d565b600081815260208181526040918290206007810180548451818502810185019095528085526060948594929360080192909184918301828280156101a857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161018a575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156101fa57602002820191906000526020600020905b8154815260200190600101908083116101e6575b5050505050905091509150915091565b600060208190529081526040902080546001820180546001600160a01b03909216929161023690610d7b565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610d7b565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050908060020180546102c490610d7b565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610d7b565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b50505050509080600301805461035290610d7b565b80601f016020809104026020016040519081016040528092919081815260200182805461037e90610d7b565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b5050505050908060040154908060050154908060060154905087565b600081815260208181526040808320600781018054600180820183559186528486200180546001600160a01b0319163317905560088201805491820181558552928420349301839055805491519293909290916001600160a01b03169084908381818185875af1925050503d806000811461047e576040519150601f19603f3d011682016040523d82523d6000602084013e610483565b606091505b5050905080156104a35782826006015461049d9190610dc5565b60068301555b50505050565b60015460009081526020819052604081204283116105195760405162461bcd60e51b8152602060048201526024808201527f54686520646561646c696e652073686f756c6420626520696e207468652066756044820152637475726560e01b606482015260840160405180910390fd5b80546001600160a01b0319166001600160a01b038916178155600181016105408882610e2d565b506002810161054f8782610e2d565b506003810161055e8682610e2d565b506004810184905560058101839055600060068201819055600180549161058483610eed565b9190505550600180546105979190610f06565b98975050505050505050565b6060600060015467ffffffffffffffff8111156105c2576105c2610a9d565b60405190808252806020026020018201604052801561064b57816020015b61063860405180610120016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001606081525090565b8152602001906001900390816105e05790505b50905060005b60015481101561094a57600081815260208181526040918290208251610120810190935280546001600160a01b031683526001810180549193928492908401919061069b90610d7b565b80601f01602080910402602001604051908101604052809291908181526020018280546106c790610d7b565b80156107145780601f106106e957610100808354040283529160200191610714565b820191906000526020600020905b8154815290600101906020018083116106f757829003601f168201915b5050505050815260200160028201805461072d90610d7b565b80601f016020809104026020016040519081016040528092919081815260200182805461075990610d7b565b80156107a65780601f1061077b576101008083540402835291602001916107a6565b820191906000526020600020905b81548152906001019060200180831161078957829003601f168201915b505050505081526020016003820180546107bf90610d7b565b80601f01602080910402602001604051908101604052809291908181526020018280546107eb90610d7b565b80156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152602001600782018054806020026020016040519081016040528092919081815260200182805480156108b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161089a575b505050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561091057602002820191906000526020600020905b8154815260200190600101908083116108fc575b50505050508152505083838151811061092b5761092b610f19565b602002602001018190525050808061094290610eed565b915050610651565b50919050565b60006020828403121561096257600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156109ab5781516001600160a01b031684529284019290840190600101610986565b5050508381038285015284518082528583019183019060005b818110156109e0578351835292840192918401916001016109c4565b5090979650505050505050565b6000815180845260005b81811015610a13576020818501810151868301820152016109f7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038816815260e060208201819052600090610a57908301896109ed565b8281036040840152610a6981896109ed565b90508281036060840152610a7d81886109ed565b6080840196909652505060a081019290925260c090910152949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ac457600080fd5b813567ffffffffffffffff80821115610adf57610adf610a9d565b604051601f8301601f19908116603f01168101908282118183101715610b0757610b07610a9d565b81604052838152866020858801011115610b2057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215610b5957600080fd5b86356001600160a01b0381168114610b7057600080fd5b9550602087013567ffffffffffffffff80821115610b8d57600080fd5b610b998a838b01610ab3565b96506040890135915080821115610baf57600080fd5b610bbb8a838b01610ab3565b95506060890135915080821115610bd157600080fd5b50610bde89828a01610ab3565b9350506080870135915060a087013590509295509295509295565b600081518084526020808501945080840160005b83811015610c325781516001600160a01b031687529582019590820190600101610c0d565b509495945050505050565b600081518084526020808501945080840160005b83811015610c3257815187529582019590820190600101610c51565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610d6d57888303603f19018552815180516001600160a01b0316845261012088820151818a870152610ccc828701826109ed565b9150508782015185820389870152610ce482826109ed565b91505060608083015186830382880152610cfe83826109ed565b92505050608080830151818701525060a080830151818701525060c080830151818701525060e08083015186830382880152610d3a8382610bf9565b925050506101008083015192508582038187015250610d598183610c3d565b968901969450505090860190600101610c94565b509098975050505050505050565b600181811c90821680610d8f57607f821691505b60208210810361094a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610dd857610dd8610daf565b92915050565b601f821115610e2857600081815260208120601f850160051c81016020861015610e055750805b601f850160051c820191505b81811015610e2457828155600101610e11565b5050505b505050565b815167ffffffffffffffff811115610e4757610e47610a9d565b610e5b81610e558454610d7b565b84610dde565b602080601f831160018114610e905760008415610e785750858301515b600019600386901b1c1916600185901b178555610e24565b600085815260208120601f198616915b82811015610ebf57888601518255948401946001909101908401610ea0565b5085821015610edd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201610eff57610eff610daf565b5060010190565b81810381811115610dd857610dd8610daf565b634e487b7160e01b600052603260045260246000fdfea26469706673582212203f446c8e7415db35fedf3c000a9ead2ad6e349e771c4e096ec919182f8bbb20864736f6c63430008110033";

type DonationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Donation__factory extends ContractFactory {
  constructor(...args: DonationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Donation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Donation__factory {
    return super.connect(runner) as Donation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationInterface {
    return new Interface(_abi) as DonationInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Donation {
    return new Contract(address, _abi, runner) as unknown as Donation;
  }
}
